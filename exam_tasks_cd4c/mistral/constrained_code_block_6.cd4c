
classdiagram SmartHomeAutomation {

  class CentralHub {
    -> Device [*];
    -> UserInterface;
    void addDevice(Device device);
    void removeDevice(Device device);
    void controlDevice(Device device, String action);
    void viewDeviceStatus(Device device);
    void receiveNotification(String notification);
  }

  abstract class Device {
    String uniqueIdentifier;
    DeviceStatus status;
  }

  class Light extends Device {
    int brightnessLevel;
    String color;
  }

  class Thermostat extends Device {
    int temperature;
    ThermostatMode mode;
  }

  class SecurityCamera extends Device {
    String resolution;
    boolean isRecording;
  }

  class UserInterface {
    CentralHub centralHub;
    void controlDevice(Device device, String action);
    void viewDeviceStatus(Device device);
    void receiveNotification(String notification);
  }

  class BackupPower {
    int capacityWh;
  }

  enum DeviceStatus {
    On, Off;
  }

  enum ThermostatMode {
    Heating, Cooling;
  }

  composition CentralHub -> Device [*];
  composition CentralHub -> UserInterface;
  composition CentralHub -> BackupPower [0..1];
}