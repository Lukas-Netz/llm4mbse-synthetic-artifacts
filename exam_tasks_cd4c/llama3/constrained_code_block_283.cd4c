



classdiagram DigitalPrintingServices  {

  class Branch  {
    String name;
    String address;
    -> Printer[*];
    -> Copier[*];
    -> Scanner[*];
  }

  abstract class Device  {
    String uniqueIdentifier;
    DeviceStatus status;
  }

  class Printer extends Device  {
    DeviceType type;
  }

  class Copier extends Device  {
    DeviceType type;
  }

  class Scanner extends Device  {
    DeviceType type;
  }

  enum DeviceType  {
    LaserPrinter,
    InkjetPrinter,
    MultifunctionDevice
  ;}

  enum DeviceStatus  {
    Available,
    NotAvailable
  ;}

  class Customer  {
    String name;
    String address;
    String contactInformation;
  }

  class Service  {
    String uniqueIdentifier;
    String description;
    double price;
  }

  class Payment  {
    String uniqueIdentifier;
    String description;
    PaymentMethod paymentMethod;
  }

  enum PaymentMethod  {
    Cash,
    CreditCard,
    OnlinePayment
  ;}

  composition Branch -> (has) Printer[*];
  composition Branch -> (has) Copier[*];
  composition Branch -> (has) Scanner[*];
  composition Branch -> (has) Customer[*];
  composition Service -> (has) Payment[*];
}