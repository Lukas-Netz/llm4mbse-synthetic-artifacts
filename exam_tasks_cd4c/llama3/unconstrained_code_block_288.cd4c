



classdiagram EmergencyResponseDroneSystem  {

  class CentralHub  {
    Drone[] drones;
    Database database;
    void assignDroneToEmergency(Drone drone, Emergency emergency);
    void trackDroneLocation(Drone drone);
    void updateDroneStatus(Drone drone);
  }

  abstract class Drone  {
    String uniqueIdentifier;
    DroneStatus status;
  }

  class SearchDrone extends Drone  {
    String searchArea;
    String searchCriteria;
  }

  class RescueDrone extends Drone  {
    String rescueEquipment;
    RescueStatus rescueStatus;
  }

  class SurveillanceDrone extends Drone  {
    String surveillanceArea;
    String surveillanceType;
  }

  class Database  {
    Drone[] drones;
    Emergency[] emergencies;
  }

  class Emergency  {
    String situationDescription;
    Location location;
  }

  enum DroneStatus  {
    Available, Unavailable;
  }

  enum RescueStatus  {
    InProgress, Completed, Failed;
  }

  composition CentralHub -> (has) Database;
  composition CentralHub -> Drone[*];
  composition Database -> Drone[*];
  composition Database -> Emergency[*];
}
