



classdiagram QuantumResistantNetwork  {

  class Node  {
    String uniqueIdentifier;
    String ipAddress;
    PublicKey publicKey;
  }

  class Edge  {
    String uniqueIdentifier;
    int bandwidth;
    int latency;
  }

  class CentralAuthority  {
    List<Node> nodes;
    List<Edge> edges;
    void addNode(Node node);
    void removeNode(Node node);
    void addEdge(Edge edge);
    void removeEdge(Edge edge);
  }

  class Network  {
    CentralAuthority centralAuthority;
    void addNode(Node node);
    void removeNode(Node node);
  }

  interface PublicKey  {
    String getPublicKey();
  }

  class NetworkRule  {
    void apply(Node node, Edge edge);
  }

  composition Network  ->  (has) CentralAuthority;
  composition CentralAuthority  ->  (has) Node[*];
  composition CentralAuthority  ->  (has) Edge[*];
  composition Network  ->  (has) NetworkRule[*];
}