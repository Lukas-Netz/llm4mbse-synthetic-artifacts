



classdiagram AgriculturalNanotechnology  {

  class Farm  {
    String name;
    Manager manager;
    Field  [ ] fields;
  }

  class Field  {
    String uniqueIdentifier;
    Farm farm;
    Crop  [ ] crops;
  }

  abstract class Crop  {
    String name;
    CropType type;
    GrowthStage growthStage;
  }

  class Grain extends Crop  {
    int yield;
    double moistureContent;
  }

  class Fruit extends Crop  {
    int ripeness;
    int quality;
  }

  class Vegetable extends Crop  {
    int ripeness;
    int quality;
  }

  class NanotechnologyComponent  {
    double particleSize;
    double concentration;
  }

  class Manager  {
    void plant(Crop crop);
    void harvest(Crop crop);
    void monitorCropGrowth(Crop crop);
  }

  enum CropType  {
    Grain, Fruit, Vegetable;
  }

  enum GrowthStage  {
    Seedling, Germination, Maturation, Harvest;
  }

  composition Farm  ->  (has) Manager;
  composition Farm  ->  (has) Field  [0..*];
  composition Field  ->  (has) Crop  [0..*];
  composition NanotechnologyComponent  ->  (has) Farm  [0..1];
}