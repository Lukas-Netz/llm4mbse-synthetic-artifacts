
classdiagram GeneTherapySystem {

    class Device {
      Carrier carrier;
      Target target;
      void encapsulate(Carrier carrier, Target target);
      void deliver(Target target);
    }

    class Carrier {
      GeneticMaterial geneticMaterial;
      void deliverToTarget(Target target);
    }

    class Target {
      GeneticMaterial receivedMaterial;
      void incorporateMaterial(GeneticMaterial material);
    }

    class Control {
      Sensor[] sensors;
      void monitorDelivery(Device device);
      void regulateDelivery();
    }

    class Sensor {
      EnvironmentalData data;
      void update(EnvironmentalData data);
    }

    class Database {
      GeneticMaterial geneticMaterial;
      Carrier carrier;
      Target target;
      void storeInformation(GeneticMaterial material, Carrier carrier, Target target);
      GeneticMaterial retrieveInformation(Carrier carrier, Target target);
    }

    class EnvironmentalData {
      String condition;
      int temperature;
      int humidity;
    }

    class GeneticMaterial {
      String sequence;
    }

    association Device 
      has 
        (Carrier)
      ->
        (Target)

    association 
      [0..*]
      static
        {
         

ordered

    }

   
;

    composition Control -> (has) Sensor [*];
    composition Control -> (has) Database [0..1];
    composition Device -> (has) Carrier [*];
    composition Device -> (has) Target [*];
    composition Database -> (has) GeneticMaterial;
    composition Database -> (has) Carrier;
    composition Database -> (has) Target;
}