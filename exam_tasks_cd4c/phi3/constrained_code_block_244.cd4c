
classdiagram SmartMeterSystem {

    class Device {
      String uniqueIdentifier;
      DeviceType type;
    WritableDataPoint[] dataPoints;
    }

    class DataPoint {
      String timestamp;
      String value;
    }

    class User {
      String username;
      String password;
      Role role;
    }

    class Role {
      String name;
      String description;
      List<Permission> permissions;
    }

    class Permission {
      String name;
      String description;
    }

    class Report {
      String name;
      String description;
      List<Filter> filters;
      List<Aggregation> aggregations;
    }

    class Filter {
      String name;
      String condition;
    }

    class Aggregation {
      String name;
      String expression;
    }

    class SmartMeterSystem {
      Device[] devices;
      User[] users;
      Role[] roles;
      Report[] reports;

      void addDevice(Device device);
      void removeDevice(String uniqueIdentifier);
      void updateDevice(Device device);
      void addDataPoint(DataPoint dataPoint);
      void removeDataPoint(String timestamp);
      void updateDataPoint(DataPoint dataPoint);
      void addUser(User user);
      void removeUser(String username);
      void updateUser(User user);
      void assignRole(User user, Role role);
      void generateReport(Report report);
      void viewData(User user, String reportName);
    }

    composition SmartMeterSystem -> (has) Device[*];
    composition SmartMeterSystem -> (has) User[*];
    composition SmartMeterSystem -> (has) Role[*];
    composition SmartMeterSystem -> (has) Report[*];

    association Device -> DataPoint [*];
    association User -> Role [*];
    composition SmartMeterSystem -> (has) Report[*];
}