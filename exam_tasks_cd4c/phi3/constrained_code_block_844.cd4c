
classdiagram SpaceInternetSystem {

    class SpaceInternetSystem {
      Satellite satellite;
      GroundStation groundStation;
      UserDevice userDevice;
      CentralManagementSystem centralManagementSystem;
    }

    class Satellite {
      String uniqueIdentifier;
      AntennaType antennaType;
    }

    class GroundStation {
      void communicateWithSatellite(Satellite satellite);
      void relayDataToUserDevice(UserDevice userDevice);
    }

    class UserDevice {
      String uniqueIdentifier;
      UserDeviceStatus status;
    }

    class SatelliteTerminal extends UserDevice {
    }

    class GroundTerminal extends UserDevice {
    }

    class CentralManagementSystem {
      void scheduleSatelliteMaintenance();
      void allocateBandwidth(UserDevice userDevice);
    }

    enum AntennaType {
      HighGain, LowGain;
    }

    enum UserDeviceStatus {
      Connected, Disconnected;
    }

  composition SpaceInternetSystem -> (has) Satellite;
  composition SpaceInternetSystem -> (has) GroundStation;
  composition SpaceInternetSystem -> (has) UserDevice;
  composition SpaceInternetSystem -> (has) CentralManagementSystem;

  association GroundStation -> Satellite [*];
  association GroundStation -> UserDevice [*];
  association CentralManagementSystem -> Satellite [*];
  association CentralManagementSystem -> UserDevice [*];
}