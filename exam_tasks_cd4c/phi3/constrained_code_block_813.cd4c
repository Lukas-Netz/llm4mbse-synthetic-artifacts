
classdiagram SmartPort {

    class Port {
      String uniqueIdentifier;
      PortStatus status;
    }

    class Berth {
      String uniqueIdentifier;
      BerthStatus status;
    }

    class Ship {
      String uniqueIdentifier;
      String name;
      int cargoCapacity;
    }

    class Cargo {
      String uniqueIdentifier;
      CargoType type;
      int weight;
    }

    class Crane {
      String uniqueIdentifier;
      CraneType type;
      int capacity;
    }

    class Truck {
      String uniqueIdentifier;
      TruckType type;
      int capacity;
    }

    class Warehouse {
      String uniqueIdentifier;
      String name;
      int capacity;
    }

    class PortOperations {
      void shipArrives(Ship ship, Berth berth);
      void shipDeparts(Ship ship, Berth berth);
      void craneLoadsCargo(Crane crane, Ship ship, Cargo cargo);
      void craneUnloadsCargo(Crane crane, Ship ship, Cargo cargo);
      void truckTransportsCargo(Truck truck, Cargo cargo, Warehouse warehouse);
      void storeCargo(Cargo cargo, Warehouse warehouse);
    }

    enum PortStatus {
      Operational, NotOperational;
    }

    enum BerthStatus {
      Occupied, Vacant;
    }

    enum CraneType {
      Forklift, TowerCrane;
    }

    enum TruckType {
      Standard, HeavyDuty;
    }

    enum CargoType {
      Container, Bulk;
    }

    class PortOperations {
      void shipArrives(Ship ship, Berth berth);
      void shipDeparts(Ship ship, Berth berth);
      void craneLoadsCargo(Crane crane, Ship ship, Cargo cargo);
      void craneUnloadsCargo(Crane crane, Ship ship, Cargo cargo);
      void truckTransportsCargo(Truck truck, Cargo cargo, Warehouse warehouse);
      void storeCargo(Cargo cargo, Warehouse warehouse);
    }

    composition Port -> (has) Berth [*];
    composition Port -> (has) Ship [*];
    composition Port -> (has) Crane [*];
    composition Port -> (has) Truck [*];
    composition Port -> (has) Warehouse [*];
}