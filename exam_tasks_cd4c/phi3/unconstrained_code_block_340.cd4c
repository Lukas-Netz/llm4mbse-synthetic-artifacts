
classdiagram BlockchainVotingSystem {

    class Blockchain {
      List<Block> blocks;
      void addBlock(Block block);
      Block getBlock(int index);
      boolean verifyVote(Vote vote);
    WritableBlock lastBlock;
    }

    class VotingPlatform {
      List<VotingSession> votingSessions;
      void createVotingSession(VotingSession session);
      void endVotingSession(VotingSession session);
      boolean verifyVoteIntegrity(Vote vote);
      VotingSession getVotingSession(int index);
    }

    class Voter {
      String voterId;
      List<VotingSession> votingSessions;
      void castVote(VotingSession session, Candidate candidate);
    }

    class VotingSession {
      String sessionId;
      Date startDate;
      Date endDate;
      List<Candidate> candidates;
      void addCandidate(Candidate candidate);
      Candidate getCandidate(int index);
    }

    class Candidate {
      String candidateName;
      String candidateId;
    }

    class Vote {
      Voter voter;
      VotingSession session;
      Candidate candidate;
    }

    class Admin {
      void createVotingSession(VotingSession session);
      void endVotingSession(VotingSession session);
    }

    class Moderator {
      void verifyVoteIntegrity(Vote vote);
    }

    composition VotingPlatform -> (has) VotingSession;
    composition Voter -> (has) VotingSession;
    composition VotingSession -> (has) Candidate;
    composition VotingSession -> (has) Vote;
    composition Blockchain -> (has) Vote;
    composition Admin -> (has) VotingSession;
    composition Moderator -> (has) Vote;
}
