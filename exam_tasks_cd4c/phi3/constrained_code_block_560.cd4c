
classdiagram HydroponicSystem {

    class SmartHome {
      Hub hub;
      BackupPower backupPower;
    }

    class Hub {
      -> Device [*];
      void addDevice(Device device);
      void removeDevice(Device device);
      String checkBackupPowerStatus();
    }

    abstract class Device {
      String uniqueIdentifier;
      DeviceStatus status;
    }

    class Light extends Device {
      int brightnessLevel;
      String color;
    }

    class Thermostat extends Device {
      int temperature;
      ThermostatMode mode;
    }

    class SecurityCamera extends Device {
      String resolution;
      boolean isRecording;
    }

    class BackupPower {
      int capacityWh;
    }

    enum DeviceStatus {
      On, Off;
    }

    enum ThermostatMode {
      Heating, Cooling;
    }

    class ControlUnit {
      String controlInterface;
      String mobileApp;
      void remoteControl(String command);
      void manualControl(String command);
      void monitorPlants();
      void monitorGrowth();
      void monitorHealth();
      void adjustTemperature(int temperature);
      void adjustHumidity(int humidity);
      void adjustLightLevel(int lightLevel);
      void adjustNutrientLevel(int nutrientLevel);
      void adjustpHLevel(int pH);
      void adjustECLevel(int EC);
      void adjustWateringLevel(int wateringLevel);
      void adjustPruningLevel(int pruningLevel);
      void adjustFertilizationLevel(int fertilizationLevel);
      void adjustPestControlLevel(int pestControlLevel);
      void adjustDiseaseControlLevel(int diseaseControlLevel);
      void adjustWeedControlLevel(int weedControlLevel);
      void adjustIrrigationLevel(int irrigationLevel);
     }

    class Sensor {
      String sensorType;
      int sensorValue;
      void readSensorValue();
      void adjustSensorValue(int sensorValue);
    Written in 

 
   
   ;}

  composition SmartHome -> (has) ControlUnit;
  composition SmartHome -> (has) BackupPower [0..1];
  composition ControlUnit -> Device [*];
}