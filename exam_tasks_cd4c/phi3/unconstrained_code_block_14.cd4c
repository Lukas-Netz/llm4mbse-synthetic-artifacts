
classdiagram DroneSystem {

    class Drone {
      String uniqueIdentifier;
      DroneType type;
      int cameraResolution;
      int cargoCapacity;
      int surveillayerange;
      DroneState state;
    }

    class Controller {
      String controllerIdentifier;
      ControllerState state;
      void sendCommand(Command command);
    }

    class CommunicationSystem {
      String systemIdentifier;
      CommunicationState state;
      void sendMessage(Message message);
      void receiveMessage(Message message);
    }

    class WeatherStation {
      String stationIdentifier;
      WeatherData data;
    }

    enum DroneType {
      Reconnaissance, Cargo, Surveillance;
    }

    enum DroneState {
      Idle, Flying, Landed;
    }

    enum ControllerState {
      Connected, Disconnected;
    }

    enum CommunicationState {
      Connected, Disconnected;
    }

    class Command {
      String commandType;
      int altitude;
      int speed;
      String direction;
    }

    class Message {
      String messageType;
      String content;
    }

    class WeatherData {
      int temperature;
      int humidity;
      int windSpeed;
    }

    association DroneSystem -> Drone;
    association DroneSystem -> Controller;
    association DroneSystem -> CommunicationSystem;
    association DroneSystem -> WeatherStation;
}
