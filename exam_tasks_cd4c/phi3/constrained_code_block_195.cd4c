
classdiagram SupplyChainAnalytics {

    class Supplier {
      String uniqueID;
      String name;
      String location;
      List<Product> products;
    }

    class Product {
      String uniqueID;
      String name;
      String category;
      List<Supplier> suppliers;
    }

    class Warehouse {
      String uniqueID;
      String name;
      String location;
      List<Product> products;
    }

    class Order {
      String uniqueID;
      String customerName;
      Date orderDate;
      List<Product> products;
    }

    class InventoryItem {
      String uniqueID;
      Product product;
      Warehouse warehouse;
      int quantity;
    }

    class Transportation {
      String uniqueID;
      Order order;
      Supplier supplier;
      Warehouse warehouse;
    }

    class SupplyChainAnalytics {
      List<Supplier> suppliers;
      List<Product> products;
      List<Warehouse> warehouses;
      List<Order> orders;
      List<InventoryItem> inventoryItems;
      List<Transportation> transportations;

      SupplyChainAnalytics()

     
   
throws DataIntegrityException;

    void predictBottlenecks();
    void identifyDisruptions();
    void analyzeImpact(Supplier supplier, Product product, Warehouse warehouse);
    void updateInventory(InventoryItem inventoryItem);
    void updateTransportation(Transportation transportation);
    void addSupplier(Supplier supplier);
    void addProduct(Product product);
    void addWarehouse(Warehouse warehouse);
    void addOrder(Order order);
    void addInventoryItem(InventoryItem inventoryItem);
    void addTransportation(Transportation transportation);
}

  composition Supplier -> SupplyChainAnalytics;
  composition Product -> SupplyChainAnalytics;
  composition Warehouse -> SupplyChainAnalytics;
  composition Order -> SupplyChainAnalytics;
  composition InventoryItem -> SupplyChainAnalytics;
  composition Transportation -> SupplyChainAnalytics;
}